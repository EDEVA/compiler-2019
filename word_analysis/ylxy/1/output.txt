CONSTTK const
INTTK int
IDENFR const_int_0_1
ASSIGN =
INTCON 0
COMMA ,
IDENFR const_int_0_2
ASSIGN =
PLUS +
INTCON 0
COMMA ,
IDENFR const_int_0_3
ASSIGN =
MINU -
INTCON 0
SEMICN ;
CONSTTK const
INTTK int
IDENFR Const_int_1
ASSIGN =
INTCON 295
COMMA ,
IDENFR const_int_2
ASSIGN =
PLUS +
INTCON 3
COMMA ,
IDENFR const_int_3
ASSIGN =
MINU -
INTCON 15
SEMICN ;
CONSTTK const
CHARTK char
IDENFR const_char_1
ASSIGN =
CHARCON _
COMMA ,
IDENFR const_char_2
ASSIGN =
CHARCON +
COMMA ,
IDENFR const_char_3
ASSIGN =
CHARCON *
SEMICN ;
CONSTTK const
CHARTK char
IDENFR Const_char_4
ASSIGN =
CHARCON a
COMMA ,
IDENFR const_char_5
ASSIGN =
CHARCON B
COMMA ,
IDENFR const_char_6
ASSIGN =
CHARCON 9
COMMA ,
IDENFR const_char_7
ASSIGN =
CHARCON 0
SEMICN ;
INTTK int
IDENFR var_int1
SEMICN ;
CHARTK char
IDENFR var_char1
SEMICN ;
INTTK int
IDENFR array_int
LBRACK [
INTCON 100
RBRACK ]
SEMICN ;
CHARTK char
IDENFR array_char
LBRACK [
INTCON 100
RBRACK ]
SEMICN ;
INTTK int
IDENFR fun1_printf
LPARENT (
INTTK int
IDENFR a
COMMA ,
CHARTK char
IDENFR b
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR c
ASSIGN =
INTCON 9
SEMICN ;
INTTK int
IDENFR d
SEMICN ;
IDENFR d
ASSIGN =
IDENFR b
PLUS +
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON printf1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
MINU -
IDENFR a
MULT *
IDENFR b
PLUS +
IDENFR b
DIV /
IDENFR a
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON printf3
COMMA ,
IDENFR a
MULT *
IDENFR a
MINU -
IDENFR b
MULT *
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR c
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON  
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
INTCON 1
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR fun2_scanf
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
COMMA ,
IDENFR b
SEMICN ;
CHARTK char
IDENFR c
COMMA ,
IDENFR d
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR a
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR a
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR d
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
IDENFR d
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR fun3_empty
LPARENT (
RPARENT )
LBRACE {
RBRACE }
VOIDTK void
IDENFR fun4_while
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
SEMICN ;
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR a
LSS <
INTCON 100
RPARENT )
LBRACE {
IDENFR array_int
LBRACK [
IDENFR a
RBRACK ]
ASSIGN =
IDENFR a
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
VOIDTK void
IDENFR fun5_do_while
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
SEMICN ;
CHARTK char
IDENFR b
SEMICN ;
IDENFR b
ASSIGN =
CHARCON b
SEMICN ;
IDENFR a
ASSIGN =
INTCON 100
SEMICN ;
DOTK do
LBRACE {
IDENFR array_char
LBRACK [
IDENFR a
RBRACK ]
ASSIGN =
IDENFR b
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
MINU -
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR a
GEQ >=
INTCON 0
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR fun6_for
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
SEMICN ;
FORTK for
LPARENT (
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
IDENFR a
LSS <
INTCON 100
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR array_int
LBRACK [
IDENFR a
RBRACK ]
ASSIGN =
IDENFR array_int
LBRACK [
IDENFR a
MINU -
INTCON 1
RBRACK ]
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
INTTK int
IDENFR fun7_if
LPARENT (
INTTK int
IDENFR b
RPARENT )
LBRACE {
INTTK int
IDENFR a
SEMICN ;
IDENFR a
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
IDENFR a
NEQ !=
INTCON 100
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR a
EQL ==
IDENFR a
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 66
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
INTCON 0
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 777
SEMICN ;
RBRACE }
ELSETK else
IDENFR a
ASSIGN =
INTCON 666
SEMICN ;
RBRACE }
ELSETK else
IDENFR a
ASSIGN =
INTCON 555
SEMICN ;
RETURNTK return
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
SEMICN ;
CHARTK char
IDENFR b
SEMICN ;
IDENFR a
ASSIGN =
INTCON 5
SEMICN ;
IDENFR b
ASSIGN =
CHARCON b
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 123
RPARENT )
SEMICN ;
IDENFR fun1_printf
LPARENT (
IDENFR a
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
IDENFR fun2_scanf
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun3_empty
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun4_while
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun5_do_while
LPARENT (
RPARENT )
SEMICN ;
IDENFR fun6_for
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR fun7_if
LPARENT (
IDENFR a
RPARENT )
RPARENT )
SEMICN ;
RBRACE }