CONSTTK const
INTTK int
IDENFR max_loop
ASSIGN =
INTCON 5
SEMICN ;
CONSTTK const
INTTK int
IDENFR max_range
ASSIGN =
INTCON 10
SEMICN ;
VOIDTK void
IDENFR test_while
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR max_loop
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR max_range
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR max_range
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR j
LSS <
IDENFR max_loop
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR j
RPARENT )
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR max_loop
RPARENT )
FORTK for
LPARENT (
IDENFR j
ASSIGN =
IDENFR i
SEMICN ;
IDENFR j
LSS <
IDENFR max_range
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
RPARENT )
IDENFR i
ASSIGN =
IDENFR j
SEMICN ;
IDENFR i
ASSIGN =
INTCON 5
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR max_loop
RPARENT )
IFTK if
LPARENT (
IDENFR i
EQL ==
INTCON 5
RPARENT )
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 5
SEMICN ;
RBRACE }
VOIDTK void
IDENFR test_dowhile
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
DOTK do
LBRACE {
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
INTCON 0
RPARENT )
DOTK do
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR i
MINU -
INTCON 10
RPARENT )
DOTK do
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
DOTK do
DOTK do
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
WHILETK while
LPARENT (
INTCON 0
RPARENT )
DOTK do
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
IDENFR max_loop
RPARENT )
DOTK do
WHILETK while
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
DOTK do
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
DOTK do
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
WHILETK while
LPARENT (
INTCON 0
RPARENT )
RBRACE }
VOIDTK void
IDENFR test_for
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
WHILETK while
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
IDENFR max_loop
SEMICN ;
IDENFR i
GRE >
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
RPARENT )
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
IDENFR j
LSS <
IDENFR max_loop
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
RPARENT )
WHILETK while
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
DOTK do
SEMICN ;
WHILETK while
LPARENT (
INTCON 0
RPARENT )
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
DOTK do
WHILETK while
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
GEQ >=
INTCON 0
RPARENT )
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR max_loop
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
PRINTFTK printf
LPARENT (
STRCON test_loop
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR test_condition
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR int_0
ASSIGN =
INTCON 0
SEMICN ;
CONSTTK const
INTTK int
IDENFR int_1
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
INTTK int
IDENFR int_00
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
IDENFR int_0
LEQ <=
IDENFR int_00
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 1
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR int_0
LEQ <=
IDENFR int_00
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR int_1
GRE >
IDENFR int_00
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 1
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR int_1
GEQ >=
IDENFR int_00
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 1
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR test_while
LPARENT (
RPARENT )
SEMICN ;
IDENFR test_dowhile
LPARENT (
RPARENT )
SEMICN ;
IDENFR test_for
LPARENT (
RPARENT )
SEMICN ;
RBRACE }
